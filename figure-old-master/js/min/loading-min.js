function onFrame(t){for(var a,i,o,n=0;count>n;n++){var e=circleLayer.children[n],s=lineLayer.children[n],d=lineLocation[n]-s.lastSegment.point,r=lineLocation[n]-s.lastSegment.point,l=locations[n]-e.position;e.position+=l/(e.data.totalDist/circleSpeed),s.firstSegment.point=e.position;var g=e.data.totalDist,h=Math.round(l.length),u=(g-h)/g,c=e.data.radiusDiff,p=e.data.startingRadius;if(s.data.looking===!1&&(s.lastSegment.point+=d/lineSpeed,s.strokeColor.lightness=.5+.5*u),e.data.growing===!0?e.radius=Math.abs(u*c+p):(p=(p+c)*threshold,e.radius=Math.abs(p-u*c)),u>threshold){if(s.data.startLooking===!0){var f=Point.random()*view.size;s.data.newLocation=f,s.data.startLooking=!1,s.data.looking=!0}var d=s.data.newLocation-s.lastSegment.point;if(s.data.looking===!0&&(s.strokeColor.lightness=.7,s.lastSegment.point+=d/lineSpeed),d.length<15&&(s.data.found=!0),s.data.found===!0){lineLocation[n]=s.data.newLocation,locations[n]=s.data.newLocation;var L=locations[n]-e.position;e.data.totalDist=L.length,e.data.growing=!e.data.growing,s.data.looking=!1,s.data.found=!1,s.data.startLooking=!0}}}}for(var count=20,threshold=.99,dots=[],locations=[],lineLocation=[],startingPoint=[],circleSpeed=10,lineSpeed=80,minRadius=3,radiusRange=6,maxRadius=radiusRange-minRadius,i=0;count>i;i++){var destination=Point.random()*view.size,startingPoints=Point.random()*view.size;startingPoint.push(startingPoints),locations.push(destination),lineLocation.push(destination)}for(var lineLayer=new Layer,i=0;count>i;i++){var path=new Path({strokeWidth:1,segments:[startingPoint[i],lineLocation[i]],strokeColor:{hue:100,saturation:0,lightness:0},closed:!1});path.data={startLooking:!0,looking:!1,found:!1,newLocation:null}}for(var circleLayer=new Layer,i=0;count>i;i++){if(i%2===0){var dot=new Shape.Circle({center:startingPoint[i],radius:minRadius*threshold,name:"dot"});dot.data={startingRadius:dot.radius,radiusDiff:radiusRange*threshold,totalDist:Math.round((destination-dot.position).length),growing:!0}}else{var dot=new Shape.Circle({center:startingPoint[i],radius:maxRadius*threshold,name:"dot"});dot.data={startingRadius:dot.radius,radiusDiff:radiusRange*threshold,totalDist:Math.round((destination-dot.position).length),growing:!1}}dot.data={startingRadius:dot.radius,radiusDiff:6*threshold,totalDist:Math.round((destination-dot.position).length),growing:!0},vector=locations[i]-dot.position,dot.data.percentTraveled=dot.data.totalDist-Math.round(vector.length),dots.push(dot)}